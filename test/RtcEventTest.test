// STL includes
#include <vector>
#include <string>

// C includes

// Library includes
#include <cxxtest/TestSuite.h>
#include <RTClib.h>

// Project includes
#include <RtcEvent.h>
#include <Connector.h>
#include <Globals.h>

using namespace std;

class RtcEventTestSuite: public CxxTest::TestSuite
{
  static const uint8_t signal_go = 1;
  RtcEvent* prtce;
  
  Updater* pa;
  Connector* pc;
public:
  void setUp()
  {
    mock_time_reset();

    pa = new Updater();
    pc = new Connector();
    prtce = NULL;
  }

  void tearDown( void )
  {
    if ( prtce )
      delete prtce;
    delete pc;
    delete pa;
    theLogger.setVerbose(false);
  }

  void testEmpty( void )
  {
    prtce = new RtcEvent(*pc,DateTime(),signal_go);
    TS_ASSERT(prtce);
  }

  void testUpdate( void )
  {
    prtce = new RtcEvent(*pc,DateTime(),signal_go);
    pa->add(prtce);
  }
  
  void testFires( void )
  {
#if 0
    DateTime fire_at;
    prtce = new RtcEvent(*pc,fire_at,signal_go);
    listener->listen(prtce,signal_go);
    set_time(fire_at)
#endif
  }
};
// vim:cin:ai:sts=2 sw=2 ft=cpp
