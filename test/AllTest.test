// STL includes
#include <vector>
#include <string>

// C includes

// Library includes
#include <cxxtest/TestSuite.h>

// Project includes
#include <IUpdate.h>

using namespace std;

class AllTestSuite: public CxxTest::TestSuite
{
  struct GetsUpdated: public IUpdate
  {
    bool was_updated;
    GetsUpdated(void): was_updated(false) 
    {
    }
    void update(void) 
    {
      was_updated = true;
    }
  };

  GetsUpdated* p;
public:
  void setUp()
  {
    p = new GetsUpdated();
  }

  void tearDown()
  {
    delete p;
  }

  void testEmptyObject( void )
  {
    TS_ASSERT_EQUALS( p->was_updated, false );
  }
  
  void testUpdate( void )
  {
    IUpdate* piu = dynamic_cast<IUpdate*>(p);
    piu->update();

    TS_ASSERT_EQUALS( p->was_updated, true );
  }


};
// vim:cin:ai:sts=2 sw=2 ft=cpp
